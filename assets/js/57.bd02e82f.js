(window.webpackJsonp=window.webpackJsonp||[]).push([[57],{302:function(t,r,e){"use strict";e.r(r);var a=e(28),n=Object(a.a)({},(function(){var t=this,r=t.$createElement,e=t._self._c||r;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"算法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#算法"}},[t._v("#")]),t._v(" 算法")]),t._v(" "),e("h3",{attrs:{id:"递归"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#递归"}},[t._v("#")]),t._v(" 递归")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://leetcode-cn.com/circle/article/koSrVI/",target:"_blank",rel:"noopener noreferrer"}},[t._v("如何写递归"),e("OutboundLink")],1)])]),t._v(" "),e("p",[t._v("递归的套路")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("public int sum(int n) {\n    if (n < 2) return n;       // ① 跳出时返回基本情况的结果\n    int childSum = sum(n - 1); // ② 先递归\n    return n + childSum;       // ③ 再计算，依赖递归的返回值\n}\n\n\n")])])]),e("p",[t._v("尾递归的套路")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("public int sum2(int n, int sum) {\n    if (n < 2) return 1 + sum; // ① 跳出时返回基本情况的结果与中间变量的计算结果\n    sum += n;                   // ② 根据函数参数与中间变量重新计算出新的中间变量\n    return sum2(n - 1, sum);    // ③ 由基本情况条件触发决定，最终返回 B + sum\n}\n\n")])])]),e("h3",{attrs:{id:"动态规划"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#动态规划"}},[t._v("#")]),t._v(" 动态规划")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://www.bilibili.com/video/BV1X741127ZM/",target:"_blank",rel:"noopener noreferrer"}},[t._v("闫氏 DP 分析法，从此再也不怕 DP 问题！"),e("OutboundLink")],1)])]),t._v(" "),e("h2",{attrs:{id:"数学"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数学"}},[t._v("#")]),t._v(" 数学")]),t._v(" "),e("h3",{attrs:{id:"求最大公约数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#求最大公约数"}},[t._v("#")]),t._v(" 求最大公约数")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://www.jb51.net/article/169844.htm",target:"_blank",rel:"noopener noreferrer"}},[t._v("js 计算最大公约数和最小公倍数代码实例"),e("OutboundLink")],1)])])])}),[],!1,null,null,null);r.default=n.exports}}]);