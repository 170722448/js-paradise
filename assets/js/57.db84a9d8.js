(window.webpackJsonp=window.webpackJsonp||[]).push([[57],{303:function(t,a,r){"use strict";r.r(a);var e=r(28),s=Object(e.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h2",{attrs:{id:"算法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#算法"}},[t._v("#")]),t._v(" 算法")]),t._v(" "),r("h3",{attrs:{id:"递归"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#递归"}},[t._v("#")]),t._v(" 递归")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://leetcode-cn.com/circle/article/koSrVI/",target:"_blank",rel:"noopener noreferrer"}},[t._v("如何写递归"),r("OutboundLink")],1)])]),t._v(" "),r("p",[t._v("递归的套路")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("public int sum(int n) {\n    if (n < 2) return n;       // ① 跳出时返回基本情况的结果\n    int childSum = sum(n - 1); // ② 先递归\n    return n + childSum;       // ③ 再计算，依赖递归的返回值\n}\n\n\n")])])]),r("p",[t._v("尾递归的套路")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("public int sum2(int n, int sum) {\n    if (n < 2) return 1 + sum; // ① 跳出时返回基本情况的结果与中间变量的计算结果\n    sum += n;                   // ② 根据函数参数与中间变量重新计算出新的中间变量\n    return sum2(n - 1, sum);    // ③ 由基本情况条件触发决定，最终返回 B + sum\n}\n\n")])])]),r("h3",{attrs:{id:"动态规划"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#动态规划"}},[t._v("#")]),t._v(" 动态规划")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://www.bilibili.com/video/BV1X741127ZM/",target:"_blank",rel:"noopener noreferrer"}},[t._v("闫氏 DP 分析法，从此再也不怕 DP 问题！"),r("OutboundLink")],1)])]),t._v(" "),r("h2",{attrs:{id:"数学"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数学"}},[t._v("#")]),t._v(" 数学")]),t._v(" "),r("h3",{attrs:{id:"求最大公约数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#求最大公约数"}},[t._v("#")]),t._v(" 求最大公约数")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://www.jb51.net/article/169844.htm",target:"_blank",rel:"noopener noreferrer"}},[t._v("js 计算最大公约数和最小公倍数代码实例"),r("OutboundLink")],1)])]),t._v(" "),r("h2",{attrs:{id:"算法技巧"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#算法技巧"}},[t._v("#")]),t._v(" 算法技巧")]),t._v(" "),r("h3",{attrs:{id:"数字技巧"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数字技巧"}},[t._v("#")]),t._v(" 数字技巧")]),t._v(" "),r("h4",{attrs:{id:"数字一半反转"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数字一半反转"}},[t._v("#")]),t._v(" 数字一半反转")]),t._v(" "),r("p",[t._v("x =1221 rev =0 每次 x/10, rev*10 当 rev>x 时停止迭代，这就到了一半位置")]),t._v(" "),r("h3",{attrs:{id:"小数靠近-0-取整"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#小数靠近-0-取整"}},[t._v("#")]),t._v(" 小数靠近 0 取整")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("function f(n) {\n  return n | 0\n}\n")])])]),r("h3",{attrs:{id:"二维数组初始化"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二维数组初始化"}},[t._v("#")]),t._v(" 二维数组初始化")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("var dp = new Array(nums.length)\n    for(var i=0;i<nums.length;i++) {\n        dp[i] = []\n        for (var sum = -1000; sum <= 1000; sum++) {\n            dp[i][sum+1000] = 0\n        }\n    }\n")])])])])}),[],!1,null,null,null);a.default=s.exports}}]);